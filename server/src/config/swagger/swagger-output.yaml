swagger: "2.0"
tags:
  - name: "Auth"
  - name: "Documents"
  - name: "Admin"
info:
  title: "Наше право API"
  version: "2.0.0"
host: "localhost:8000"
basePath: "/"
schemes:
  - "http"
securityDefinitions:
  Bearer:
    type: "apiKey"
    name: "Authorization"
    in: "header"
    description: "Введите токен в формате: Bearer {token}"
security:
  - Bearer: []
paths:
  /registration:
    post:
      tags:
        - "Auth"
      parameters:
        - name: "user"
          in: "body"
          required: true
          schema:
            $ref: "#/definitions/UserReg"
      responses:
        201:
          description: "User registered successfully"
          schema:
            $ref: "#/definitions/UserResponse"
        400:
          description: "Invalid input"
  /login:
    post:
      tags:
        - "Auth"
      parameters:
        - name: "credentials"
          in: "body"
          required: true
          schema:
            $ref: "#/definitions/UserLogin"
      responses:
        200:
          description: "Login successful"
          schema:
            $ref: "#/definitions/UserResponse"
        401:
          description: "Unauthorized"

  /logout:
    post:
      tags:
        - "Auth"
      parameters:
      - name: Authorization
        description: "Access token"
        in: headers
        required: true
        schema:
            $ref: "#/definitions/UserReg"
      responses:
        200:
          description: "User logged out successfully"
        401:
          description: "Unauthorized"
          
  /users/admin/block:
    post:
      tags:
        - "Admin"
      parameters:
        - name: Authorization
          description: "Access token"
          in: headers
          required: true
        - name: "data"
          in: "body"
          required: true
          schema:
              $ref: "#/definitions/UserBlock"
      responses:
        201:
          description: "User registered successfully"
          schema:
            $ref: "#/definitions/UserBlockResponse"
        400:
          description: "Invalid input"

  /users/admin/unblock:
    post:
      tags:
        - "Admin"
      parameters:
        - name: Authorization
          description: "Access token"
          in: headers
          required: true
        - name: "data"
          in: "body"
          required: true
          schema:
              $ref: "#/definitions/UserUnblock"
      responses:
        201:
          description: "User registered successfully"
          schema:
            $ref: "#/definitions/UserBlockResponse"
        400:
          description: "Invalid input"

definitions:
  UserReg:
    type: "object"
    properties:
      name:
        type: "string"
      surname:
        type: "string"
      email:
        type: "string"
        format: "email"
      password:
        type: "string"
    required:
      - username
      - email
      - password
  UserResponse:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      surname:
        type: "string"
      role:
        type: "string"
        enum: ["user", "lawyer", admin] 
      email:
        type: "string"
        format: "email"
      isActivatedByEmail:
        type: "boolean"
      activationLink:
        type: "string"
      refreshToken:
        type: "string"
      accessToken:
        type: "string"
      password:
        type: "string"
  UserLogin:
    type: "object"
    properties:
      email:
        type: "string"
        format: "email"
      password:
        type: "string"
  GetPublishDocument:
    type: "object"
    properties:
      email:
        type: "string"
        format: "email"
      password:
        type: "string"

  UserBlockResponse:
    type: "object"
    properties:
      success:
          type: "boolean"
          example: "false"
      message:
        type: "string"
  
  UserBlock:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      role:
        type: "string"
        enum: ["user", "lawyer"] 
      permanentBlocked:
        type: "boolean"
        description: "Пользователь заблокирован навсегда"
        example: false
      dateBlocked:
        type: "string"
        format: "date-time"
        description: "Дата последнего изменения"
        example: "2024-10-08T00:00:00Z"
    responses:
        200:
          description: "Пользователь заблокирован"
          schema:
            $ref: "#/definitions/UserBlockResponse"
  UserUnblock:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      role:
        type: "string"
        enum: ["user", "lawyer"] 
    responses:
        200:
          schema:
            $ref: "#/definitions/UserBlockResponse"